GOPATH:=$(shell go env GOPATH)
GOCMD=go
GOBUILD=$(GOCMD) build
GOTEST=$(GOCMD) test
DKRCMD=docker
DKRBUILD=$(DKRCMD) build
PROTOCMD=protoc

all: proto test buildlinux docker
build:
	# building grpc and rest binary:
	$(GOBUILD) -o bin/service cmd/main.go
run:
	# running service:
	./bin/service
buildlinux:
	# building the go binary for the linux container:
	env GOOS=linux GOARCH=amd64 $(GOBUILD) -o bin/service cmd/main.go
docker:
	# building the docker container
	$(DKRBUILD) -t {name} .
proto:
	# compiling protobuffer code:
	$(PROTOCMD) --proto_path=api \
	-I $(GOPATH)/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis \
	--go_out=plugins=grpc:./usecase {name}.proto

	#compiling rest gateway
	$(PROTOCMD) --proto_path=api \
	-I $(GOPATH)/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis \
	--grpc-gateway_out=logtostderr=true,grpc_api_configuration=api/{name}.yaml:./usecase {name}.proto

	# compiling open api info
	$(PROTOCMD) --proto_path=api \
	-I $(GOPATH)/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis \
	--swagger_out=logtostderr=true,grpc_api_configuration=api/{name}.yaml:./api {name}.proto
