package config

import (
	log "github.com/sirupsen/logrus"

	"github.com/spf13/viper"
)

// GRPCConfig configuration settings for the GRPC server
type GRPCConfig struct {
	Host string
	Port string
	Protocol string
}

// Address address to host the grpc server
func (conf *GRPCConfig) Address() string {
	return conf.Host + ":" + conf.Port
}

// RESTGatewayConfig configuration settings for the REST gateway
type RESTGatewayConfig struct {
	Host     string
	Port     string
	Protocol string
	GRPCPort string
}

// Address address to host the grpc server
func (conf *RESTGatewayConfig) Address() string {
	return conf.Host + ":" + conf.Port
}

type DBConfig struct {
	Host     string
	Port     string
	Username string
	Password string
	DbName   string
	Type	 string
}

type LoggingConfig struct {
	Formatter LoggingFormatter
	Level     LoggingLevel
	Output    LoggingOutput
}

// configuration settings
type Config struct {
	GRPC        GRPCConfig
	RestGateway RESTGatewayConfig
	DB          DBConfig
	Logging   LoggingConfig
}

// Load loads config file based on -config commandline flag.  default config will sit at ./config.yaml
func Load(config Config) Config {
	configPath := flag.String("config", "./config.yaml", "path to the configuration file")
	flag.Parse()
	return LoadFile(*configPath, config)
}

// LoadFile loads loads config file into the config structure
func LoadFile(path string, config Config) Config {
	viper.SetConfigFile(path)
	err := viper.ReadInConfig()
	if err != nil {
		log.Panic("error:", err)
	}
	// setup some sane defaults
	setDefaults()
	err = viper.Unmarshal(&config)
	if err != nil {
		log.Panic("error:", err)
	}
	return config
}

func setDefaults() {
	viper.SetDefault("grpc.port", "8080")
	viper.SetDefault("grpc.host", "localhost")

	viper.SetDefault("restgateway.port", "9090")
	viper.SetDefault("restgateway.host", "localhost")
	viper.SetDefault("restgateway.grpcport", "8080")
}
