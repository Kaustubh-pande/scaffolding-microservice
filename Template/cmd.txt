package main

import (
	"context"

	log "github.com/sirupsen/logrus"
	"{provider-username}/{microservices}/config"
	"{provider-username}/{microservices}/repository"
	"{provider-username}/{microservices}/server"
	handler "{provider-username}/{microservices}/usecase/handler"
	"{provider-username}/{microservices}/model"
)

func main() {
	conf := config.Load()
	// Creates a database connection and handles
	// closing it again before exit.
	db, err := model.CreateConnection(conf)
	defer db.Close()

	if err != nil {
		log.Fatalf("Could not connect to DB: %v", err)
	}

	repository := &repository.{Name}Repository{Db: db, Conf: conf}
	{name}Service := &handler.Service{Repo: repository}

	ctx := context.Background()

	go func() {
		server.StartRESTGateway(ctx, conf)
	}()
	server.StartGRPCServer(conf, authService)
}
